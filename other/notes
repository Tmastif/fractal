


todo

pixel put understand
julia set - understand
implement
makefile

clean code
norminette


general formula
f(z) = z^2 + c    -> z(1) = c + c //first iteration



z^2 =
(x + yi)^2 =
(x + yi) * (x + yi) =

x^2 + xyi + xyi + y^2i^2 =

x^2 + 2xyi - y^2 =

x^2 - y^2 + 2xyi
new real  + new imaginary


add + c




compile with minilibx
cc main.c -lX11 -lXext -lmlx



//change one range to another: rescale value

((new_max - new_min) * (unscaled_num - old_min)) / (old_max - old_min) + new_min



 void    fractol()
{
    t_complex   z;
    t_complex   c;
    double  tmp_real;
    int count;

    z.real = 0;
    z.i = 0;
    
    c.real = 0.25;
    c.i = 0.4;

    count = 0;
    while (count < 10)
    {
        // general formula: z = z^2 + c
        tmp_real = (z.real * z.real) - (z.i * z.i);
        z.i = 2 * z.real * z.i;
        z.real = tmp_real;
        // + c
        z.real = z.real + c.real;
        z.i = z.i + c.i;
        count++;
        printf("iteration: %d real: %f imaginary: %f\n", count, z.real, z.i);
    }
}
scaling

    int i;

    i = 0;
    while (i < 100)
    {
            printf("%d -> %f\n", i, scale(i, 0, 5, 0, 99));
            i++;
    }


